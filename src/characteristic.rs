pub struct Characteristic {
    id: u64,
    characteristic_type: Type,
    perms: Vec<Perm>,
    description: String,
}

enum Type {
    AccessoryFlags,
    AccessoryIdentifier,
    Active,
    AdministratorOnlyAccess,
    AirParticulateDensity,
    AirParticulateSize,
    AirQuality,
    AppMatchingIdentifier,
    AudioFeedback,
    BatteryLevel,
    Bool,
    Brightness,
    Bytes,
    CarbonDioxideDetected,
    CarbonDioxideLevel,
    CarbonDioxidePeakLevel,
    CarbonMonoxideDetected,
    CarbonMonoxideLevel,
    CarbonMonoxidePeakLevel,
    Category,
    ChargingState,
    ColorTemperature,
    ConfigureBridgedAccessoryStatus,
    ConfigureBridgedAccessory,
    ContactSensorState,
    CoolingThresholdTemperature,
    CurrentAirPurifierState,
    CurrentAmbientLightLevel,
    CurrentDoorState,
    CurrentFanState,
    CurrentHeaterCoolerState,
    CurrentHeatingCoolingState,
    CurrentHorizontalTiltAngle,
    CurrentHumidifierDehumidifierState,
    CurrentPosition,
    CurrentRelativeHumidity,
    CurrentSlatState,
    CurrentTemperature,
    CurrentTiltAngle,
    CurrentTime,
    CurrentVerticalTiltAngle,
    DayOfTheWeek,
    DigitalZoom,
    DiscoverBridgedAccessories,
    DiscoveredBridgedAccessories,
    FilterChangeIndication,
    FilterLifeLevel,
    FirmwareRevision,
    Float,
    HardwareRevision,
    HeatingThresholdTemperature,
    HoldPosition,
    Hue,
    Identify,
    ImageMirroring,
    ImageRotation,
    Int,
    LeakDetected,
    LinkQuality,
    LockControlPoint,
    LockCurrentState,
    LockLastKnownAction,
    LockManagementAutoSecurityTimeout,
    LockPhysicalControls,
    LockTargetState,
    Logs,
    Manufacturer,
    Model,
    MotionDetected,
    Mute,
    Name,
    NightVision,
    NitrogenDioxideDensity,
    ObstructionDetected,
    OccupancyDetected,
    On,
    OpticalZoom,
    OutletInUse,
    OzoneDensity,
    PairSetup,
    PairVerify,
    PairingFeatures,
    PairingPairings,
    PM2_5Density,
    PM10Density,
    PositionState,
    ProgrammableSwitchEvent,
    ProgrammableSwitchOutputState,
    Reachable,
    RelativeHumidityDehumidifierThreshold,
    RelativeHumidityHumidifierThreshold,
    ResetFilterIndication,
    RotationDirection,
    RotationSpeed,
    Saturation,
    SecuritySystemAlarmType,
    SecuritySystemCurrentState,
    SecuritySystemTargetState,
    SelectedRTPStreamConfiguration,
    SelectedStreamConfiguration,
    SerialNumber,
    ServiceLabelIndex,
    ServiceLabelNamespace,
    SetupEndpoints,
    SlatType,
    SmokeDetected,
    SoftwareRevision,
    StatusActive,
    StatusFault,
    StatusJammed,
    StatusLowBattery,
    StatusTampered,
    StreamingStatus,
    String,
    SulphurDioxideDensity,
    SupportedAudioStreamConfiguration,
    SupportedRTPConfiguration,
    SupportedVideoStreamConfiguration,
    SwingMode,
    TargetAirPurifierState,
    TargetAirQuality,
    TargetDoorState,
    TargetFanState,
    TargetHeaterCoolerState,
    TargetHeatingCoolingState,
    TargetHorizontalTiltAngle,
    TargetHumidifierDehumidifierState,
    TargetPosition,
    TargetRelativeHumidity,
    TargetSlatState,
    TargetTemperature,
    TargetTiltAngle,
    TargetVerticalTiltAngle,
    TemperatureDisplayUnits,
    TimeUpdate,
    TunnelConnectionTimeout,
    TunneledAccessoryAdvertising,
    TunneledAccessoryConnected,
    TunneledAccessoryStateNumber,
    Version,
    VOCDensity,
    Volume,
    WaterLevel,
}

impl Type {
    fn as_str(&self) -> &str {
        match self {
            &Type::AccessoryFlags => "A6",
            &Type::AccessoryIdentifier, => "",
            &Type::Active, => "",
            &Type::AdministratorOnlyAccess, => "",
            &Type::AirParticulateDensity, => "",
            &Type::AirParticulateSize, => "",
            &Type::AirQuality, => "",
            &Type::AppMatchingIdentifier, => "",
            &Type::AudioFeedback, => "",
            &Type::BatteryLevel, => "",
            &Type::Bool, => "",
            &Type::Brightness, => "",
            &Type::Bytes, => "",
            &Type::CarbonDioxideDetected, => "",
            &Type::CarbonDioxideLevel, => "",
            &Type::CarbonDioxidePeakLevel, => "",
            &Type::CarbonMonoxideDetected, => "",
            &Type::CarbonMonoxideLevel, => "",
            &Type::CarbonMonoxidePeakLevel, => "",
            &Type::Category, => "",
            &Type::ChargingState, => "",
            &Type::ColorTemperature, => "",
            &Type::ConfigureBridgedAccessoryStatus, => "",
            &Type::ConfigureBridgedAccessory, => "",
            &Type::ContactSensorState, => "",
            &Type::CoolingThresholdTemperature, => "",
            &Type::CurrentAirPurifierState, => "",
            &Type::CurrentAmbientLightLevel, => "",
            &Type::CurrentDoorState, => "",
            &Type::CurrentFanState, => "",
            &Type::CurrentHeaterCoolerState, => "",
            &Type::CurrentHeatingCoolingState, => "",
            &Type::CurrentHorizontalTiltAngle, => "",
            &Type::CurrentHumidifierDehumidifierState, => "",
            &Type::CurrentPosition, => "",
            &Type::CurrentRelativeHumidity, => "",
            &Type::CurrentSlatState, => "",
            &Type::CurrentTemperature, => "",
            &Type::CurrentTiltAngle, => "",
            &Type::CurrentTime, => "",
            &Type::CurrentVerticalTiltAngle, => "",
            &Type::DayOfTheWeek, => "",
            &Type::DigitalZoom, => "",
            &Type::DiscoverBridgedAccessories, => "",
            &Type::DiscoveredBridgedAccessories, => "",
            &Type::FilterChangeIndication, => "",
            &Type::FilterLifeLevel, => "",
            &Type::FirmwareRevision, => "",
            &Type::Float, => "",
            &Type::HardwareRevision, => "",
            &Type::HeatingThresholdTemperature, => "",
            &Type::HoldPosition, => "",
            &Type::Hue, => "",
            &Type::Identify, => "",
            &Type::ImageMirroring, => "",
            &Type::ImageRotation, => "",
            &Type::Int, => "",
            &Type::LeakDetected, => "",
            &Type::LinkQuality, => "",
            &Type::LockControlPoint, => "",
            &Type::LockCurrentState, => "",
            &Type::LockLastKnownAction, => "",
            &Type::LockManagementAutoSecurityTimeout, => "",
            &Type::LockPhysicalControls, => "",
            &Type::LockTargetState, => "",
            &Type::Logs, => "",
            &Type::Manufacturer, => "",
            &Type::Model, => "",
            &Type::MotionDetected, => "",
            &Type::Mute, => "",
            &Type::Name, => "",
            &Type::NightVision, => "",
            &Type::NitrogenDioxideDensity, => "",
            &Type::ObstructionDetected, => "",
            &Type::OccupancyDetected, => "",
            &Type::On, => "",
            &Type::OpticalZoom, => "",
            &Type::OutletInUse, => "",
            &Type::OzoneDensity, => "",
            &Type::PairSetup, => "",
            &Type::PairVerify, => "",
            &Type::PairingFeatures, => "",
            &Type::PairingPairings, => "",
            &Type::PM2_5Density, => "",
            &Type::PM10Density, => "",
            &Type::PositionState, => "",
            &Type::ProgrammableSwitchEvent, => "",
            &Type::ProgrammableSwitchOutputState, => "",
            &Type::Reachable, => "",
            &Type::RelativeHumidityDehumidifierThreshold, => "",
            &Type::RelativeHumidityHumidifierThreshold, => "",
            &Type::ResetFilterIndication, => "",
            &Type::RotationDirection, => "",
            &Type::RotationSpeed, => "",
            &Type::Saturation, => "",
            &Type::SecuritySystemAlarmType, => "",
            &Type::SecuritySystemCurrentState, => "",
            &Type::SecuritySystemTargetState, => "",
            &Type::SelectedRTPStreamConfiguration, => "",
            &Type::SelectedStreamConfiguration, => "",
            &Type::SerialNumber, => "",
            &Type::ServiceLabelIndex, => "",
            &Type::ServiceLabelNamespace, => "",
            &Type::SetupEndpoints, => "",
            &Type::SlatType, => "",
            &Type::SmokeDetected, => "",
            &Type::SoftwareRevision, => "",
            &Type::StatusActive, => "",
            &Type::StatusFault, => "",
            &Type::StatusJammed, => "",
            &Type::StatusLowBattery, => "",
            &Type::StatusTampered, => "",
            &Type::StreamingStatus, => "",
            &Type::String, => "",
            &Type::SulphurDioxideDensity, => "",
            &Type::SupportedAudioStreamConfiguration, => "",
            &Type::SupportedRTPConfiguration, => "",
            &Type::SupportedVideoStreamConfiguration, => "",
            &Type::SwingMode, => "",
            &Type::TargetAirPurifierState, => "",
            &Type::TargetAirQuality, => "",
            &Type::TargetDoorState, => "",
            &Type::TargetFanState, => "",
            &Type::TargetHeaterCoolerState, => "",
            &Type::TargetHeatingCoolingState, => "",
            &Type::TargetHorizontalTiltAngle, => "",
            &Type::TargetHumidifierDehumidifierState, => "",
            &Type::TargetPosition, => "",
            &Type::TargetRelativeHumidity, => "",
            &Type::TargetSlatState, => "",
            &Type::TargetTemperature, => "",
            &Type::TargetTiltAngle, => "",
            &Type::TargetVerticalTiltAngle, => "",
            &Type::TemperatureDisplayUnits, => "",
            &Type::TimeUpdate, => "",
            &Type::TunnelConnectionTimeout, => "",
            &Type::TunneledAccessoryAdvertising, => "",
            &Type::TunneledAccessoryConnected, => "",
            &Type::TunneledAccessoryStateNumber, => "",
            &Type::Version, => "",
            &Type::VOCDensity, => "",
            &Type::Volume, => "",
            &Type::WaterLevel, => "",
        }
    }
}

enum Perm {
    Read,
    Write,
    Events,
}

impl Perm {
    fn as_str(&self) -> &str {
        match self {
            &Perm::Read => "pr",
            &Perm::Write => "pw",
            &Perm::Events => "ev",
        }
    }
}

enum Unit {
    Percentage,
    ArcDegrees,
    Celsius,
    Lux,
    Seconds,
}

impl Unit {
    fn as_str(&self) -> &str {
        match self {
            &Unit::Percentage => "percentage",
            &Unit::ArcDegrees => "arcdegrees",
            &Unit::Celsius => "celsius",
            &Unit::Lux => "lux",
            &Unit::Seconds => "seconds",
        }
    }
}

enum Format {
    String,
    Bool,
    Float,
    UInt8,
    UInt16,
    UInt32,
    Int32,
    UInt64,
    Data,
    TLV8,
}

impl Format {
    fn as_str(&self) -> &str {
        match self {
            &Format::String => "string",
            &Format::Bool => "bool",
            &Format::Float => "float",
            &Format::UInt8 => "uint8",
            &Format::UInt16 => "uint16",
            &Format::UInt32 => "uint32",
            &Format::Int32 => "int32",
            &Format::UInt64 => "uint64",
            &Format::Data => "data",
            &Format::TLV8 => "tlv8",
        }
    }
}
